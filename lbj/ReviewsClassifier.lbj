package uiuc.cs446.parser;

import java.util.List;

/** Simply produces "word" features. */
discrete% WordFeatures(ReviewJ review) <- {
	List words = review.getWords();
    for (int i = 0; i < words.size(); i++)
		sense words.get(i);
}

discrete ReviewLabel(ReviewJ d) <- { return d.getLabel(); }

/** A learned review classifier; its definition comes from data. */
discrete ReviewsClassifier(ReviewJ review) <-
learn ReviewLabel
  using WordFeatures
  from new ReviewDataReader("data/funny_reviews_training.txt", "data/not_funny_reviews_training.txt")
  5 rounds

  with SparseNetworkLearner {
  SparseAveragedPerceptron.Parameters p =
       new SparseAveragedPerceptron.Parameters();
     p.learningRate = 0.05;
     p.thickness = 5;
     baseLTU = new SparseAveragedPerceptron(p);
  }
  
  testFrom new ReviewDataReader("data/funny_reviews_testing.txt","data/not_funny_reviews_testing.txt") 

  progressOutput 2000
end

